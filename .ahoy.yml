---
ahoyapi: v2

commands:
  up:
    usage: Build project.
    cmd: docker-compose up -d "$@"

  down:
    usage: Delete project (CAUTION).
    cmd: |
      if [ "$1" == "y" ]; then
        ahoy clean
      else
        ahoy confirm "Running this command will destroy your current site, database and build? Are you sure you didn't mean ahoy stop?" &&
        # Run this if confirm returns true
        ahoy clean ||
        # Run this if confirm returns false
        echo "OK, probably a wise choice..."
      fi

  clean:
    usage: Stop Docker containers and remove container, images, volumes and networks.
    cmd: |
      if [ -f "docker-compose.yml" ]; then
        docker-compose down --volumes
      fi
      rm -rf ./vendor

  build:
    usage: Build project.
    cmd: |
      docker-compose up -d --build --force-recreate "$@"

  build-containers:
    usage: Build containers using dockerfiles.
    cmd: |
      docker build -t salsadigitalau/wordpress-lagoon:latest -f Dockerfile.cli .

  push-containers:
    usage: Push containers to the remote repository.
    cmd: |
      docker push salsadigitalau/wordpress-lagoon:latest

  install-site:
    usage: Install a vanilla Wordpress site.
    cmd: |
      echo "Installing a vanilla Wordpress site as $LOCALDEV_URL"
      docker-compose exec -T cli \
              composer install --no-dev -n --prefer-dist --working-dir=/app
      docker-compose exec -T cli \
        wp db reset --yes \
          --path=/app/${WEBROOT}/wp \
          --url=$LOCALDEV_URL \
          --allow-root
      docker-compose exec -T cli \
        wp core install \
        --allow-root \
        --url=$LOCALDEV_URL \
        --title=$COMPOSE_PROJECT_NAME \
        --admin_user=admin \
        --admin_email=admin@example.com \
        --skip-email \
        --path=/app/${WEBROOT}/wp
      ahoy wp theme activate twentytwenty --path=/app/${WEBROOT}/wp

  cli:
    usage: Start a shell inside TEST container.
    cmd: docker-compose exec cli bash

  run:
    usage: Run command inside TEST container.
    cmd: docker-compose exec -T cli bash -c "$@"

  wp:
    usage: Run wp-cli commands in TEST container.
    cmd: docker-compose exec -T cli wp --allow-root --path=/app/web/wp "$@"

  composer:
    usage: Runs composer inside conainer
    cmd: COMPOSER_MEMORY_LIMIT=-1 composer "$@" --ignore-platform-reqs

  logs:
    usage: Show Docker logs.
    cmd: docker-compose logs "$@"

  ps:
    usage: List running Docker containers.
    cmd: docker-compose ps | grep ${COMPOSE_PROJECT_NAME}

  restart:
    usage: Restart Docker containers.
    cmd: docker-compose restart

  stop:
    usage: Stop Docker containers.
    cmd: docker-compose stop "$@"

  mysql-import:
    usage: Pipe in a sql file.  `ahoy mysql-import local.sql`
    cmd: |
      if [ -e "$@" ] ; then
        docker-compose exec cli bash -c 'wp --path=/app/web/wp db reset --yes' &&
        docker-compose exec -T cli bash -c 'wp --path=/app/web/wp db query' < "$@" &&
        docker-compose exec -T cli bash -c 'wp --path=/app/web/wp option update blogname "$COMPOSE_PROJECT_NAME $LAGOON_ENVIRONMENT_TYPE"'
      else
        echo "Provided sql file" "$@" "does not exist"
      fi

  mysql-dump:
    usage: Dump data out into a file. `ahoy wp db export local.sql"`
    cmd: docker-compose exec cli bash -c 'wp db export --add-drop-table --path=/app/web/wp "$@"'

  backup:
    usage: Backup database into the persistent volume content/uploads/backups
    cmd: docker-compose exec cli bash -c 'wp db export --add-drop-table --path=/app/web/wp - | gzip > /app/web/content/uploads/backups/pre-deploy-backup-`date +%Y-%m-%d-%T`.db.sql.gz'

  refresh-db:
    usage: Loads database files from .data/db.sql and imports into container
    cmd: |
      if [ -f ".data/db.sql" ] ; then
        ahoy mysql-import .data/db.sql
      else echo "File .data/db.sql not found, no database imported"
      fi

  pull:
    usage: Pull latest docker images.
    cmd: docker image ls --format \"{{.Repository}}:{{.Tag}}\" | grep wordpress-lagoon-cli | grep -v none | xargs -n1 docker pull | cat

  confirm:
    cmd: |
      read -r -p "$@ [y/N] " response
      if [[ $response = y ]]
      then
        true
      else
        false
      fi
    hide: true

entrypoint:
  - bash
  - "-c"
  - "-e"
  - |
    [ -f .env ] && [ -s .env ] && export $(grep -v '^#' .env | xargs) && if [ -f .env.local ] && [ -s .env.local ]; then export $(grep -v '^#' .env.local | xargs); fi
    export APP=${APP:-/app}
    export WEBROOT=web
    bash -e -c "$0" "$@"
  - '{{cmd}}'
  - '{{name}}'
