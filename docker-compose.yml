version: '2.3'

x-lagoon-project:
  # Lagoon project name (leave `&lagoon-project` when you edit this)
  &lagoon-project wordpress-nginx

x-volumes:
  &default-volumes
    # Define all volumes you would like to have real-time mounted into the docker containers
    volumes:
      - .:/app:delegated
      - uploads:/app/web/content/uploads

x-image-version: &image-version
  ${IMAGE_VERSION:-latest}

x-environment:
  &default-environment
    LAGOON_PROJECT: *lagoon-project
    # Route that should be used locally
    LAGOON_ROUTE: ${LAGOON_ROUTE:-http://wordpress-nginx.docker.amazee.io}
    # Uncomment if you like to have the system behave like in production
    LAGOON_ENVIRONMENT_TYPE: production
    LAGOON_FEATURE_FLAG_ROOTLESS_WORKLOAD: ${LAGOON_FEATURE_FLAG_ROOTLESS_WORKLOAD:-enabled}
    MARIADB_DATABASE: ${MARIADB_DATABASE:-lagoon}
    MARIADB_USERNAME: ${MARIADB_USERNAME:-lagoon}
    MARIADB_PASSWORD: ${MARIADB_PASSWORD:-lagoon}
    MARIADB_HOST: ${MARIADB_HOST:-mariadb}
    WEBROOT: ${WEBROOT:-web}
    # Uncomment to enable xdebug and then restart via `docker-compose up -d`
    # XDEBUG_ENABLE: "true"

volumes:
  uploads: {}

services:

  cli: # cli container, will be used for executing composer and any local commands (wpcli etc.)
    build:
      context: .
      dockerfile: .docker/Dockerfile.cli
    image: *lagoon-project # this image will be reused as `CLI_IMAGE` in subsequent Docker builds
    <<: *default-volumes
    user: root
    environment:
      <<: *default-environment
    # Mount volumes from the ssh-agent running in Pygmy to inject host SSH key into container. See https://pygmy.readthedocs.io/en/master/ssh_agent/
    volumes_from: ### Local overrides to mount host SSH keys. Automatically removed in CI.
      - container:amazeeio-ssh-agent ### Local overrides to mount host SSH keys. Automatically removed in CI.
    ports:
      - "35729" # Livereload port in container. Find port on host with `ahoy info` or `docker compose port cli 35729`.
    #;< LAGOON
    labels:
      lagoon.type: cli-persistent # See https://docs.lagoon.sh/using-lagoon-advanced/service-types/
      lagoon.persistent.name: &lagoon-nginx-name nginx-php # Mount the persistent storage of nginx-php pod into this container.
      lagoon.persistent: &lagoon-persistent-files /app/web/sites/default/files/  # Location where the persistent storage should be mounted.
    #;> LAGOON

  nginx:
    build:
      context: .
      dockerfile: .docker/Dockerfile.nginx
    labels:
      lagoon.type: nginx-php-persistent
      lagoon.persistent: /app/web/content/uploads/ # define where the persistent storage should be mounted too
    << : *default-volumes # loads the defined volumes from the top
    depends_on:
      - cli # basically just tells docker-compose to build the cli first
    environment:
      << : *default-environment # loads the defined environment variables from the top
    networks:
      - amazeeio-network
      - default

  php:
    build:
      context: .
      dockerfile: .docker/Dockerfile.php
      args:
        CLI_IMAGE: *lagoon-project
        IMAGE_VERSION: *image-version
    labels:
      lagoon.type: nginx-php-persistent
      lagoon.name: nginx # we want this service be part of the nginx pod in Lagoon
      lagoon.persistent: /app/web/content/uploads/ # define where the persistent storage should be mounted too
    << : *default-volumes # loads the defined volumes from the top
    depends_on:
      - cli # basically just tells docker-compose to build the cli first
    environment:
      << : *default-environment # loads the defined environment variables from the top

  mariadb:
    image: uselagoon/mariadb
    labels:
      lagoon.type: mariadb
    ports:
      - "3306" # exposes the port 3306 with a random local port, find it with `docker-compose port mariadb 3306`
    environment:
      << : *default-environment

networks:
  amazeeio-network:
    external: true
